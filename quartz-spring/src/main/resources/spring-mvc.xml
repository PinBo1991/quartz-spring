<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
					http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
					http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
					http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
					http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
					http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!--开起注解方式的springmvc -->
	<mvc:annotation-driven />
	<!--设置spring容器的扫描范围，扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 -->
	<context:component-scan base-package="com.dzpykj.**" />
	
	<!--让spring前端控制器跳过静态的资源请求 location路径, /resources/**这个文件夹下所有资源全部跳过 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!-- 简单任务 -->
    <bean id="simpleJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
        <property name="targetObject" ref="myBean" />  
        <property name="targetMethod" value="printMessage" />  
    </bean>
   
	<!-- For times when you need more complex processing, passing data to the scheduled job -->  
    <bean name="firstComplexJobDetail"    class="org.springframework.scheduling.quartz.JobDetailFactoryBean">  
        <property name="jobClass" value="com.dzpykj.quartzspring.common.quartz.FirstScheduledJob" />  
        <property name="jobDataMap">  
            <map>  
                <entry key="anotherBean" value-ref="anotherBean" />
            </map>  
        </property>  
        <property name="durability" value="true" />  
    </bean>  
      
    <!-- Always run at 20:00 everyday -->  
    <bean name="secondComplexJobDetail"    class="org.springframework.scheduling.quartz.JobDetailFactoryBean">  
        <property name="jobClass" value="com.dzpykj.quartzspring.common.quartz.SecondScheduledJob" />  
        <property name="durability" value="true" />  
    </bean>  
   
    <!-- Run the job every 2 seconds with initial delay of 1 second -->  
    <bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">  
        <property name="jobDetail" ref="simpleJobDetail" />  
        <property name="startDelay" value="1000" />  
        <property name="repeatInterval" value="2000" />  
    </bean>  
   
    <!-- Run the job every 5 seconds -->  
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
        <property name="jobDetail" ref="firstComplexJobDetail" />  
        <!--<property name="cronExpression" value="0/5 * * ? * SAT-SUN" />-->  
        <property name="cronExpression" value="0/5 * * ? * *" />  
    </bean>  
      
    <!-- Always run at 20:00 everyday -->  
    <bean id="secondCronTrigger"  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
        <property name="jobDetail" ref="secondComplexJobDetail" />  
        <property name="cronExpression" value="0 0 20 ? * *" />  
    </bean>  
   
    <!-- Scheduler factory bean to glue together jobDetails and triggers to Configure Quartz Scheduler -->  
    <bean  class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <property name="jobDetails">  
            <list>  
                <ref bean="simpleJobDetail" />  
                <ref bean="firstComplexJobDetail" />  
                <ref bean="secondComplexJobDetail" />  
            </list>  
        </property>  
   
        <property name="triggers">  
            <list>  
                <ref bean="simpleTrigger" />  
                <ref bean="cronTrigger" />  
                <ref bean="secondCronTrigger" />  
            </list>  
        </property>  
    </bean>  
</beans>